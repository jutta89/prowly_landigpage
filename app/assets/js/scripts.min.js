"use strict";function _classCallCheck(t,s){if(!(t instanceof s))throw new TypeError("Cannot call a class as a function")}document.addEventListener("DOMContentLoaded",function(){function t(t){return'<div class="search-person-item">\n\t\t\t\t\t<div class="search-person__avatar"> <img src="'+t.avatar+'" alt="avatar" /> </div> \n\t\t\t\t\t<div class="search-person__text"> \n\t\t\t\t\t\t<div class="search-person__name">\n\t\t\t\t\t\t'+t.firstName+" "+t.lastName+'\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="search-person__position">\n\t\t\t\t\t\t'+t.position+"\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\n\t\t\t\t</div>"}function s(s){c=s.target.value&&0!==s.target.value.lenght?r.filter(function(t){return t.firstName.toLowerCase().includes(s.target.value.toLowerCase())}):[].concat(r),c.length>0?(l.classList.remove("is-hidden"),d.classList.add("is-focused")):(l.classList.add("is-hidden"),d.classList.remove("is-focused"));var e=c.map(function(s){return t(s)});l.innerHTML="",e.forEach(function(t){l.innerHTML+=t});var n=d.offsetHeight+l.offsetHeight-1,a=document.getElementById("input-shadow");l.classList.contains("is-hidden")&&(a.style.height=n+"px")}var e=function u(t,s,e,n){_classCallCheck(this,u),this.firstName=t,this.lastName=s,this.avatar=e,this.position=n},n=new e("Asia","Kaczmarek","../assets/img/bg.png","Front-end"),a=new e("Joanna","Nowak","../assets/img/bg.png","Front-end"),i=new e("Kasia","Iksińska","../assets/img/bg.png","Zawod"),o=new e("Paweł","Nazwiskowy","../assets/img/bg.png","Front-end"),r=[n,a,i,o],c=[].concat(r),d=document.getElementById("search-person"),l=document.getElementById("persons-list");d.addEventListener("keyup",s),d.addEventListener("focusin",function(){l.classList.remove("is-hidden"),d.classList.add("is-focused");var s=r.map(function(s){return t(s)});l.innerHTML="",s.forEach(function(t){l.innerHTML+=t})}),d.addEventListener("focusout",function(){l.classList.add("is-hidden"),d.classList.remove("is-focused"),d.value=d.defaultValue})},!1);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInBlcnNvblRvSHRtbCIsIml0ZW0iLCJhdmF0YXIiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBvc2l0aW9uIiwic2VhcmNoUGVyc29uIiwiZSIsImZpbHRlcmVkQXJyYXkiLCJ0YXJnZXQiLCJ2YWx1ZSIsImxlbmdodCIsInBlcnNvbnNBcnJheSIsImZpbHRlciIsIm4iLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiY29uY2F0IiwibGVuZ3RoIiwibGlzdFBlcnNvbiIsImNsYXNzTGlzdCIsInJlbW92ZSIsImlucHV0UGVyc29uIiwiYWRkIiwibGlzdFRvSHRtbCIsIm1hcCIsImlubmVySFRNTCIsImZvckVhY2giLCJpbnB1dEhlaWdodCIsIm9mZnNldEhlaWdodCIsImlucHV0U2hhZG93IiwiZ2V0RWxlbWVudEJ5SWQiLCJjb250YWlucyIsInN0eWxlIiwiaGVpZ2h0IiwiUGVyc29uIiwidGhpcyIsInBlcnNvbkl0ZW0iLCJwZXJzb25JdGVtMiIsInBlcnNvbkl0ZW0zIiwicGVyc29uSXRlbTQiLCJkZWZhdWx0VmFsdWUiXSwibWFwcGluZ3MiOiJBQUFBLFlBRUEsU0FBU0EsaUJBQWdCQyxFQUFVQyxHQUFlLEtBQU1ELFlBQW9CQyxJQUFnQixLQUFNLElBQUlDLFdBQVUscUNBRWhIQyxTQUFTQyxpQkFBaUIsbUJBQW9CLFdBdUI3QyxRQUFTQyxHQUFhQyxHQUNyQixNQUFPLDZGQUErRkEsRUFBS0MsT0FBUyx1SUFBeUlELEVBQUtFLFVBQVksSUFBTUYsRUFBS0csU0FBVyx3RkFBMEZILEVBQUtJLFNBQVcsMkRBRy9ZLFFBQVNDLEdBQWFDLEdBUXBCQyxFQVBJRCxFQUFFRSxPQUFPQyxPQUFtQyxJQUExQkgsRUFBRUUsT0FBT0MsTUFBTUMsT0FPckJDLEVBQWFDLE9BQU8sU0FBVUMsR0FDN0MsTUFBT0EsR0FBRVgsVUFBVVksY0FBY0MsU0FBU1QsRUFBRUUsT0FBT0MsTUFBTUssb0JBUHZDRSxPQUFPTCxHQVd2QkosRUFBY1UsT0FBUyxHQUMxQkMsRUFBV0MsVUFBVUMsT0FBTyxhQUM1QkMsRUFBWUYsVUFBVUcsSUFBSSxnQkFFMUJKLEVBQVdDLFVBQVVHLElBQUksYUFDekJELEVBQVlGLFVBQVVDLE9BQU8sY0FNOUIsSUFBSUcsR0FBYWhCLEVBQWNpQixJQUFJLFNBQVV4QixHQUM1QyxNQUFPRCxHQUFhQyxJQUVyQmtCLEdBQVdPLFVBQVksR0FDdkJGLEVBQVdHLFFBQVEsU0FBVTFCLEdBQzVCa0IsRUFBV08sV0FBYXpCLEdBSXpCLElBQUkyQixHQUFjTixFQUFZTyxhQUFlVixFQUFXVSxhQUFlLEVBQ25FQyxFQUFjaEMsU0FBU2lDLGVBQWUsZUFDdENaLEdBQVdDLFVBQVVZLFNBQVMsZUFDakNGLEVBQVlHLE1BQU1DLE9BQVNOLEVBQWMsTUE5RDNDLEdBQUlPLEdBQVMsUUFBU0EsR0FBT2hDLEVBQVdDLEVBQVVGLEVBQVFHLEdBQ3pEWCxnQkFBZ0IwQyxLQUFNRCxHQUV0QkMsS0FBS2pDLFVBQVlBLEVBQ2pCaUMsS0FBS2hDLFNBQVdBLEVBQ2hCZ0MsS0FBS2xDLE9BQVNBLEVBQ2RrQyxLQUFLL0IsU0FBV0EsR0FHYmdDLEVBQWEsR0FBSUYsR0FBTyxPQUFRLFlBQWEsdUJBQXdCLGFBQ3JFRyxFQUFjLEdBQUlILEdBQU8sU0FBVSxRQUFTLHVCQUF3QixhQUNwRUksRUFBYyxHQUFJSixHQUFPLFFBQVMsV0FBWSx1QkFBd0IsU0FDdEVLLEVBQWMsR0FBSUwsR0FBTyxRQUFTLGFBQWMsdUJBQXdCLGFBRXhFdkIsR0FBZ0J5QixFQUFZQyxFQUFhQyxFQUFhQyxHQUV0RGhDLEtBQW1CUyxPQUFPTCxHQUUxQlUsRUFBY3hCLFNBQVNpQyxlQUFlLGlCQUV0Q1osRUFBYXJCLFNBQVNpQyxlQUFlLGVBOEN6Q1QsR0FBWXZCLGlCQUFpQixRQUFTTyxHQUl0Q2dCLEVBQVl2QixpQkFBaUIsVUFBVyxXQUN2Q29CLEVBQVdDLFVBQVVDLE9BQU8sYUFDNUJDLEVBQVlGLFVBQVVHLElBQUksYUFDMUIsSUFBSUMsR0FBYVosRUFBYWEsSUFBSSxTQUFVeEIsR0FDM0MsTUFBT0QsR0FBYUMsSUFFckJrQixHQUFXTyxVQUFZLEdBQ3ZCRixFQUFXRyxRQUFRLFNBQVUxQixHQUM1QmtCLEVBQVdPLFdBQWF6QixNQUkxQnFCLEVBQVl2QixpQkFBaUIsV0FBWSxXQUN4Q29CLEVBQVdDLFVBQVVHLElBQUksYUFDekJELEVBQVlGLFVBQVVDLE9BQU8sY0FDN0JDLEVBQVlaLE1BQVFZLEVBQVltQixpQkFFL0IiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XG5cdHZhciBQZXJzb24gPSBmdW5jdGlvbiBQZXJzb24oZmlyc3ROYW1lLCBsYXN0TmFtZSwgYXZhdGFyLCBwb3NpdGlvbikge1xuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQZXJzb24pO1xuXG5cdFx0dGhpcy5maXJzdE5hbWUgPSBmaXJzdE5hbWU7XG5cdFx0dGhpcy5sYXN0TmFtZSA9IGxhc3ROYW1lO1xuXHRcdHRoaXMuYXZhdGFyID0gYXZhdGFyO1xuXHRcdHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcblx0fTtcblxuXHR2YXIgcGVyc29uSXRlbSA9IG5ldyBQZXJzb24oJ0FzaWEnLCAnS2Fjem1hcmVrJywgJy4uL2Fzc2V0cy9pbWcvYmcucG5nJywgJ0Zyb250LWVuZCcpO1xuXHR2YXIgcGVyc29uSXRlbTIgPSBuZXcgUGVyc29uKCdKb2FubmEnLCAnTm93YWsnLCAnLi4vYXNzZXRzL2ltZy9iZy5wbmcnLCAnRnJvbnQtZW5kJyk7XG5cdHZhciBwZXJzb25JdGVtMyA9IG5ldyBQZXJzb24oJ0thc2lhJywgJ0lrc2nFhHNrYScsICcuLi9hc3NldHMvaW1nL2JnLnBuZycsICdaYXdvZCcpO1xuXHR2YXIgcGVyc29uSXRlbTQgPSBuZXcgUGVyc29uKCdQYXdlxYInLCAnTmF6d2lza293eScsICcuLi9hc3NldHMvaW1nL2JnLnBuZycsICdGcm9udC1lbmQnKTtcblxuXHR2YXIgcGVyc29uc0FycmF5ID0gW3BlcnNvbkl0ZW0sIHBlcnNvbkl0ZW0yLCBwZXJzb25JdGVtMywgcGVyc29uSXRlbTRdO1xuXG5cdHZhciBmaWx0ZXJlZEFycmF5ID0gW10uY29uY2F0KHBlcnNvbnNBcnJheSk7IC8vIHNwcmVhZCBcblxuXHR2YXIgaW5wdXRQZXJzb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaC1wZXJzb25cIik7XG5cblx0dmFyIGxpc3RQZXJzb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBlcnNvbnMtbGlzdFwiKTtcblxuXHRmdW5jdGlvbiBwZXJzb25Ub0h0bWwoaXRlbSkge1xuXHRcdHJldHVybiAnPGRpdiBjbGFzcz1cInNlYXJjaC1wZXJzb24taXRlbVwiPlxcblxcdFxcdFxcdFxcdFxcdDxkaXYgY2xhc3M9XCJzZWFyY2gtcGVyc29uX19hdmF0YXJcIj4gPGltZyBzcmM9XCInICsgaXRlbS5hdmF0YXIgKyAnXCIgYWx0PVwiYXZhdGFyXCIgLz4gPC9kaXY+IFxcblxcdFxcdFxcdFxcdFxcdDxkaXYgY2xhc3M9XCJzZWFyY2gtcGVyc29uX190ZXh0XCI+IFxcblxcdFxcdFxcdFxcdFxcdFxcdDxkaXYgY2xhc3M9XCJzZWFyY2gtcGVyc29uX19uYW1lXCI+XFxuXFx0XFx0XFx0XFx0XFx0XFx0JyArIGl0ZW0uZmlyc3ROYW1lICsgJyAnICsgaXRlbS5sYXN0TmFtZSArICdcXG5cXHRcXHRcXHRcXHRcXHRcXHQ8L2Rpdj5cXG5cXHRcXHRcXHRcXHRcXHRcXHQ8ZGl2IGNsYXNzPVwic2VhcmNoLXBlcnNvbl9fcG9zaXRpb25cIj5cXG5cXHRcXHRcXHRcXHRcXHRcXHQnICsgaXRlbS5wb3NpdGlvbiArICdcXG5cXHRcXHRcXHRcXHRcXHRcXHQ8L2Rpdj5cXG5cXHRcXHRcXHRcXHRcXHQ8L2Rpdj5cXHRcXG5cXHRcXHRcXHRcXHQ8L2Rpdj4nO1xuXHR9XG5cblx0ZnVuY3Rpb24gc2VhcmNoUGVyc29uKGUpIHtcblx0XHRpZiAoIWUudGFyZ2V0LnZhbHVlIHx8IGUudGFyZ2V0LnZhbHVlLmxlbmdodCA9PT0gMCkge1xuXHRcdFx0ZmlsdGVyZWRBcnJheSA9IFtdLmNvbmNhdChwZXJzb25zQXJyYXkpO1xuXG5cdFx0XHQvLyB3YXJpYW50IGJleiBsaXN0eSBuYSBwb2N6YXRrdVxuXHRcdFx0Ly8gZmlsdGVyZWRBcnJheSA9IFtdOyBcblx0XHRcdC8vIGlucHV0UGVyc29uLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWZvY3VzZWQnKTsgXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZpbHRlcmVkQXJyYXkgPSBwZXJzb25zQXJyYXkuZmlsdGVyKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRcdHJldHVybiBuLmZpcnN0TmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGUudGFyZ2V0LnZhbHVlLnRvTG93ZXJDYXNlKCkpO1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0aWYgKGZpbHRlcmVkQXJyYXkubGVuZ3RoID4gMCkge1xuXHRcdFx0bGlzdFBlcnNvbi5jbGFzc0xpc3QucmVtb3ZlKCdpcy1oaWRkZW4nKTtcblx0XHRcdGlucHV0UGVyc29uLmNsYXNzTGlzdC5hZGQoJ2lzLWZvY3VzZWQnKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGlzdFBlcnNvbi5jbGFzc0xpc3QuYWRkKCdpcy1oaWRkZW4nKTtcblx0XHRcdGlucHV0UGVyc29uLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWZvY3VzZWQnKTtcblx0XHR9XG5cblx0XHQvLyBpbWllIGx1YiBuYXp3aXNrb1xuXHRcdC8vIGZpbHRlcmVkQXJyYXkgPSBwZXJzb25zQXJyYXkuZmlsdGVyKChuKT0+bi5maXJzdE5hbWUuaW5jbHVkZXMoZS50YXJnZXQudmFsdWUpIHx8IG4ubGFzdE5hbWUuaW5jbHVkZXMoZS50YXJnZXQudmFsdWUpKTtcblxuXHRcdHZhciBsaXN0VG9IdG1sID0gZmlsdGVyZWRBcnJheS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHJldHVybiBwZXJzb25Ub0h0bWwoaXRlbSk7XG5cdFx0fSk7XG5cdFx0bGlzdFBlcnNvbi5pbm5lckhUTUwgPSAnJztcblx0XHRsaXN0VG9IdG1sLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdGxpc3RQZXJzb24uaW5uZXJIVE1MICs9IGl0ZW07XG5cdFx0fSk7XG5cblx0XHQvLyBTSEFET1cgSU5QVVQmRFJPUERPV05cblx0XHR2YXIgaW5wdXRIZWlnaHQgPSBpbnB1dFBlcnNvbi5vZmZzZXRIZWlnaHQgKyBsaXN0UGVyc29uLm9mZnNldEhlaWdodCAtIDE7XG5cdFx0dmFyIGlucHV0U2hhZG93ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lucHV0LXNoYWRvdycpO1xuXHRcdGlmIChsaXN0UGVyc29uLmNsYXNzTGlzdC5jb250YWlucygnaXMtaGlkZGVuJykpIHtcblx0XHRcdGlucHV0U2hhZG93LnN0eWxlLmhlaWdodCA9IGlucHV0SGVpZ2h0ICsgJ3B4Jztcblx0XHR9XG5cdH1cblxuXHRpbnB1dFBlcnNvbi5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIHNlYXJjaFBlcnNvbik7XG5cblx0Ly8gRk9DVVMgSU5QVVRcblx0Ly8gd2FyaWFudCB6IGNhbGEgbGlzdGFcblx0aW5wdXRQZXJzb24uYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIGZ1bmN0aW9uICgpIHtcblx0XHRsaXN0UGVyc29uLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWhpZGRlbicpO1xuXHRcdGlucHV0UGVyc29uLmNsYXNzTGlzdC5hZGQoJ2lzLWZvY3VzZWQnKTtcblx0XHR2YXIgbGlzdFRvSHRtbCA9IHBlcnNvbnNBcnJheS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHJldHVybiBwZXJzb25Ub0h0bWwoaXRlbSk7XG5cdFx0fSk7XG5cdFx0bGlzdFBlcnNvbi5pbm5lckhUTUwgPSAnJztcblx0XHRsaXN0VG9IdG1sLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdGxpc3RQZXJzb24uaW5uZXJIVE1MICs9IGl0ZW07XG5cdFx0fSk7XG5cdH0pO1xuXG5cdGlucHV0UGVyc29uLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3Vzb3V0JywgZnVuY3Rpb24gKCkge1xuXHRcdGxpc3RQZXJzb24uY2xhc3NMaXN0LmFkZCgnaXMtaGlkZGVuJyk7XG5cdFx0aW5wdXRQZXJzb24uY2xhc3NMaXN0LnJlbW92ZSgnaXMtZm9jdXNlZCcpO1xuXHRcdGlucHV0UGVyc29uLnZhbHVlID0gaW5wdXRQZXJzb24uZGVmYXVsdFZhbHVlO1xuXHR9KTtcbn0sIGZhbHNlKTsiXX0=
